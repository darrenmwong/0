YUI.add("flickr-favorites-remove-updater",function(e){"use strict";function t(e,t){var n={};return n.photo_id=e.photoId,t.callAPI("flickr.favorites.remove",n).then(null,function(e){throw t[e.fatal?"error":"debug"]("[flickr-favorites-remove-updater] failed getting or processing API response:",e),e})}e.namespace("ModelUpdaters")["flickr-favorites-remove"]={run:t}},"@VERSION@",{requires:["flickr-promise"],optional:[]});
YUI.add("photo-engagement-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ModelFetchers["flickr-photos-getInfo"].run(t,this.appContext)},update:function(t,n){var r=[],i;return e.Lang.isObject(n,!0)&&"isFaved"in n&&(i=n.isFaved.newVal?"flickr-favorites-add":"flickr-favorites-remove",r.push(e.ModelUpdaters[i].run({photoId:t},this.appContext))),e.batch.apply(null,r)}},toggleFave:function(e){var t=this.getValue(e,"faveCount"),n=this.getValue(e,"isFaved"),r=!n,i=t+(r?1:-1);this.setValues(e,{isFaved:r,faveCount:i})},addAsFave:function(e){var t=this.getValue(e,"faveCount"),n=this.getValue(e,"isFaved");return n?!1:(this.setValues(e,{isFaved:!0,faveCount:t+1}),!0)},attributes:{ownerNsid:{},isFaved:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},faveCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return t=e.AttributeHelpers.coerceInteger(t),t<0&&(t=0),t},defaultValue:0},canShare:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},canDownload:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},commentCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return t=e.AttributeHelpers.coerceInteger(t),t<0&&(t=0),t},defaultValue:0},noteCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return t=e.AttributeHelpers.coerceInteger(t),t<0&&(t=0),t},defaultValue:0},viewCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return t=e.AttributeHelpers.coerceInteger(t),t<0&&(t=0),t},defaultValue:0},isOwner:{readOnly:!0,derivedBy:["owner"],getter:function(e,t){var n=this.appContext.getViewer();return!!n.signedIn&&this.getValue(t,"ownerNsid")===n.nsid}},canFave:{readOnly:!0,derivedBy:["is_owner"],getter:function(e,t){return!this.getValue(t,"isOwner")}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-photos-getInfo-fetcher","flickr-favorites-add-updater","flickr-favorites-remove-updater","attribute-helpers"]});
YUI.add("flickr-favorites-getContext-fetcher",function(e){"use strict";function t(t){var n={photo_id:t.photoId,num_prev:t.numNext,num_next:t.numPrev,extras:e.APIHelper.request.getRebootPhotoExtras()};return t.id?n.user_id=t.id:n.path_alias=t.pathAlias,n}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u=t[4],a=[],f=[],l=s.proxy(n.photoId),c,h,p,d,v,m,g=[];return c=r.prevphotos,h=r.nextphotos,f=e.APIHelper.response.parsePhotos({photos:c.photo,personModelRegistry:o,photoModelRegistry:s,photoEngagementModelRegistry:u}),a=e.APIHelper.response.parsePhotos({photos:h.photo,personModelRegistry:o,photoModelRegistry:s,photoEngagementModelRegistry:u}),m=i.getValue(n.id,"photoContextList"),d=m.hasMinBoundary?m.hasMinBoundary():!1,v=m.hasMaxBoundary?m.hasMaxBoundary():!1,p=m.getList(),g=e.APIHelper.response.addOrReplaceListByContext({model:l,next:f,prev:a.reverse(),hasMax:v,hasMin:d,current:p,numNext:n.numNext,numPrev:n.numPrev}),i.setValue(n.id,"photoContextList",g),{next:f,previous:a.reverse()}}function r(t,n){var r=this;return e.batch(n.callAPI("flickr.favorites.getContext",this._processParams(t),!0),n.getModelRegistry("favorite-models"),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models"),n.getModelRegistry("photo-engagement-models")).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-favorites-getContext-fetcher] failed getting or processing API response:",e),e.code===3&&e.message==="Photo not a favorite"&&(e.notInContext=!0),e})}e.namespace("ListFetchers")["flickr-favorites-getContext"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper","type-validator"],optional:["favorite-models","photo-models","person-models","photo-engagement-models"]});
YUI.add("flickr-favorites-getList-fetcher",function(e){"use strict";function t(t){var n={extras:e.APIHelper.request.getRebootPhotoExtras(),per_page:t.perPage||20,page:t.page||1,get_user_info:1};if(t.id)n.user_id=t.id;else{if(!t.pathAlias)throw new Error("[flickr-favorites-getList-fetcher] `id` or `pathAlias` is required.");n.path_alias=t.pathAlias}return n}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u=t[4],a={id:r.user.nsid,pathAlias:r.user.pathAlias};return a.owner=e.APIHelper.response.parsePerson(r.user),s.exists(a.owner.id)||s.add(a.owner),a.owner=s.proxy(a.owner.id),a.photoPageList=e.APIHelper.response.parsePhotos({photos:r.photos.photo,personModelRegistry:s,photoModelRegistry:i,photoEngagementModelRegistry:u}),o.exists(a.id)?o.setValue(a.id,"photoPageList",a.photoPageList):o.add(a),a.photoPageList}function r(t,n){var r=this,i=n.getViewer().signedIn?"flickr.favorites.getList":"flickr.favorites.getPublicList";return e.batch(n.callAPI(i,this._processParams(t)),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models"),n.getModelRegistry("favorite-models"),n.getModelRegistry("photo-engagement-models")).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-favorites-getList-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-favorites-getList"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photo-models","person-models","favorite-models"]});
YUI.add("favorite-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ListFetchers["flickr-favorites-getList"].run(t,this.appContext)}},attributes:{displayType:{readOnly:!0,defaultFn:function(){return"favorites"}},title:{readOnly:!0,derivedBy:["owner"],defaultFn:function(e){var t=this.appContext.getViewer(),n;return t&&t.nsid===e?"Your favorites":(n=this.getValue(e,"owner"),n?n.getValue("displayname")+"'s favorites":"Favorites")}},pathAlias:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)||undefined},defaultFn:function(e){return e}},owner:{isModel:!0},photoPageList:{isListProxy:!0,pageFetch:{listFetcher:e.ListFetchers["flickr-favorites-getList"]}},photoContextList:{isListProxy:!0,contextFetch:{listFetcher:e.ListFetchers["flickr-favorites-getContext"],listItemIdField:"photoId"}},url:{readOnly:!0,derivedBy:["owner"],defaultFn:function(e){var t=this.getValue(e,"owner"),n=t?t.getValue("pathAlias"):e;return"/photos/"+n+"/favorites/"}},urlSuffix:{readOnly:!0,derivedBy:["owner"],defaultFn:function(e){var t=this.getValue(e,"owner"),n=t.getValue("pathAlias");return"faves-"+n}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-favorites-getContext-fetcher","flickr-favorites-getList-fetcher"]});
YUI.add("flickr-groups-pools-getContext-fetcher",function(e){"use strict";function t(t){var n={photo_id:t.photoId,extras:e.APIHelper.request.getRebootPhotoExtras(),num_prev:t.numNext,num_next:t.numPrev,get_group_info:1};if(t.id)n.group_id=t.id;else{if(!t.pathAlias)throw new Error("[flickr-groups-pools-getPhotos-fetcher] `id` or `pathAlias` is required.");n.group_path_alias=t.pathAlias}return n}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u=t[4],a=[],f=[],l=s.proxy(n.photoId),c,h,p,d,v,m,g=[];return c=r.prevphotos,h=r.nextphotos,f=e.APIHelper.response.parsePhotos({photos:c.photo,personModelRegistry:o,photoModelRegistry:s,photoEngagementModelRegistry:u}),a=e.APIHelper.response.parsePhotos({photos:h.photo,personModelRegistry:o,photoModelRegistry:s,photoEngagementModelRegistry:u}),m=i.getValue(n.id,"photoContextList"),d=m.hasMinBoundary?m.hasMinBoundary():!1,v=m.hasMaxBoundary?m.hasMaxBoundary():!1,p=m.getList(),g=e.APIHelper.response.addOrReplaceListByContext({model:l,next:f,prev:a.reverse(),current:p,hasMin:d,hasMax:v,numNext:n.numNext,numPrev:n.numPrev}),i.setValue(n.id,"photoContextList",g),{next:f,previous:a.reverse()}}function r(t,n){var r=this;return e.batch(n.callAPI("flickr.groups.pools.getContext",this._processParams(t),!0),n.getModelRegistry("groups-pool-models"),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models"),n.getModelRegistry("photo-engagement-models")).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-pools-getContext-fetcher] failed getting or processing API response:",e),e.code===2&&e.message==="Photo not in pool"&&(e.notInContext=!0),e})}e.namespace("ListFetchers")["flickr-groups-pools-getContext"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["favorite-models","photo-models","photo-engagement-models"]});
YUI.add("flickr-groups-pools-getPhotos-fetcher",function(e){"use strict";function t(t){var n={extras:e.APIHelper.request.getRebootPhotoExtras(),per_page:t.perPage||20,page:t.page||1,get_group_info:1};if(t.id)n.group_id=t.id;else{if(!t.pathAlias)throw new Error("[flickr-groups-pools-getPhotos-fetcher] `id` or `pathAlias` is required.");n.group_path_alias=t.pathAlias}return t.withPhotoId&&(n.jump_to=t.withPhotoId),n}function n(t){var n=t[0],r=t[1],i=t[2],s=t[3],o=t[4],u,a;return u={id:n.group.nsid,title:n.group.name,pathAlias:n.group.pathalias,isMember:n.group.isMember,isModerator:n.group.isModerator,isAdmin:n.group.isAdmin,memberCount:n.group.member_count,poolCount:n.group.poolCount,bestIconURL:e.APIHelper.response.parseGroupIconURLs(n.group.iconurls)},a=e.APIHelper.response.parsePhotos({photos:n.photos.photo,personModelRegistry:i,photoModelRegistry:r,photoEngagementModelRegistry:o}),u.photoPageList={perPage:n.photos.perpage,page:n.photos.page,pageContent:a,totalItems:n.group.poolCount},s.exists(u.id)?(s.setValue(u.id,"photoPageList",u.photoPageList),s.setValue(u.id,"poolCount",parseInt(n.group.poolCount,10)||0)):s.add(u),a}function r(t,n){var r=this,i=this._processParams(t);return e.batch(n.callAPI("flickr.groups.pools.getPhotos",i,!0),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models"),n.getModelRegistry("groups-pool-models"),n.getModelRegistry("photo-engagement-models")).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-pools-getPhotos-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-groups-pools-getPhotos"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photo-models","person-models","groups-pool-models","photo-engagement-models"]});
YUI.add("flickr-groups-invite-photo-invite-creator",function(e){"use strict";function t(t,n){var r={};return r.photo_id=t.photoID,r.group_id=t.groupID,e.batch(n.callAPI("flickr.groups.invite.photo.invite",r),n.getModel("groups-pool-models",t.groupID),n.getModelRegistry("photo-group-invitation-models"),n.getModelRegistry("photo-group-invitations-models")).then(function(e){var r=e[0],i=e[1],s=e[2],o=e[3],u,a,f;if(r.stat==="ok")return u=[t.photoID,t.groupID].join("-"),a={id:u,photoId:t.photoID,groupId:t.groupID,invitedBy:n.getViewer().nsid},f=s.exists(u)?s.proxy(u):s.add(a),o.exists(t.photoID)&&!o.getValue(t.photoID,"invitations").getFromListByID(u)&&(o.getValue(t.photoID,"groups").prependToList(i),o.getValue(t.photoID,"invitations").prependToList(f),o.setValue(t.photoID,"total",o.getValue(t.photoID,"total")+1)),i},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-invite-photo-invite] failed getting or processing API response:",e),e})}e.namespace("ModelCreators")["flickr-groups-invite-photo-invite"]={run:t}},"@VERSION@",{requires:["flickr-promise"],optional:[]});
YUI.add("flickr-groups-pools-add-creator",function(e){"use strict";function t(t,n){var r={};return r.photo_id=t.photoID,r.group_id=t.groupID,e.batch(n.callAPI("flickr.groups.pools.add",r),n.getModel("groups-pool-models",t.groupID),n.getModel("photo-models",t.photoID),n.getModelRegistry("photo-groups-models"),n.getModelRegistry("photo-contexts-models")).then(function(e){var n=e[0],r=e[1],i=e[2],s=e[3],o=e[4];if(n.stat==="ok")return r&&!r.hasPhoto(i.getValue("id"))&&(r.addPhoto(i),r.setValue("poolCount",r.getValue("poolCount")+1)),s.exists(t.photoID)&&!s.getValue(t.photoID,"groups").getFromListByID(r.getValue("id"))&&(s.getValue(t.photoID,"groups").prependToList(r),s.setValue(t.photoID,"total",s.getValue(t.photoID,"total")+1)),o.exists(t.photoID)&&!o.getValue(t.photoID,"contexts").getFromListByID(r.getValue("id"))&&(o.setValue(t.photoID,"totalGroups",o.getValue(t.photoID,"totalGroups")+1),o.getValue(t.photoID,"contexts").appendToList(r)),r},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-pools-add] failed getting or processing API response:",e),e})}e.namespace("ModelCreators")["flickr-groups-pools-add"]={run:t}},"@VERSION@",{requires:["flickr-promise"],optional:[]});
YUI.add("flickr-groups-pools-remove-deletor",function(e){"use strict";function t(t,n){var r={};return r.photo_id=t.photoID,r.group_id=t.groupID,e.batch(n.callAPI("flickr.groups.pools.remove",r),n.getModel("groups-pool-models",t.groupID),n.getModel("photo-models",t.photoID),n.getModelRegistry("photo-groups-models"),n.getModelRegistry("photo-contexts-models")).then(function(e){var n=e[0],r=e[1],i=e[2],s=e[3],o=e[4];if(n.stat==="ok")return o.exists(t.photoID)&&o.getValue(t.photoID,"contexts").getFromListByID(t.groupID)&&(o.setValue(t.photoID,"totalGroups",o.getValue(t.photoID,"totalGroups")-1),o.getValue(t.photoID,"contexts").removeFromList(t.groupID)),s.exists(t.photoID)&&s.getValue(t.photoID,"groups").getFromListByID(t.groupID)&&(s.setValue(t.photoID,"total",s.getValue(t.photoID,"total")-1),s.getValue(t.photoID,"groups").removeFromList(t.groupID)),r&&(r.hasPhoto(i.getValue("id"))&&r.removePhoto(i),r.setValue("poolCount",r.getValue("poolCount")-1)),r},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-pools-remove-deletor] failed getting or processing API response:",e),e})}e.namespace("ModelDeletors")["flickr-groups-pools-remove"]={run:t}},"@VERSION@",{requires:["flickr-promise"],optional:[]});
YUI.add("flickr-groups-invite-photo-cancel-deletor",function(e){"use strict";function t(t,n){var r={};return r.photo_id=t.photoID,r.group_id=t.groupID,e.batch(n.callAPI("flickr.groups.invite.photo.cancel",r),n.getModel("groups-pool-models",t.groupID),n.getModelRegistry("photo-group-invitation-models"),n.getModelRegistry("photo-group-invitations-models")).then(function(e){var n=e[0],r=e[1],i=e[2],s=e[3],o;if(n.stat==="ok")return o=[t.photoID,t.groupID].join("-"),s.exists(t.photoID)&&s.getValue(t.photoID,"invitations").getFromListByID(o)&&(s.setValue(t.photoID,"total",s.getValue(t.photoID,"total")-1),s.getValue(t.photoID,"groups").removeFromList(t.groupID),s.getValue(t.photoID,"invitations").removeFromList(o)),i.remove(o),r},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-invite-photo-cancel] failed getting or processing API response:",e),e})}e.namespace("ModelDeletors")["flickr-groups-invite-photo-cancel"]={run:t}},"@VERSION@",{requires:["flickr-promise"],optional:[]});
YUI.add("groups-pool-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ListFetchers["flickr-groups-pools-getPhotos"].run(t,this.appContext)},addPhoto:function(t,n){return e.ModelCreators["flickr-groups-pools-add"].run(t,n)},removePhoto:function(t,n){return e.ModelDeletors["flickr-groups-pools-remove"].run(t,n)},invitePhoto:function(t,n){return e.ModelCreators["flickr-groups-invite-photo-invite"].run(t,n)},cancelPhotoInvitation:function(t,n){return e.ModelDeletors["flickr-groups-invite-photo-cancel"].run(t,n)}},addPhoto:function(e,t){return this.getValue(e,"photoPageList").unshift(t),this.getValue(e,"photoContextList").hasMaxBoundary()&&this.getValue(e,"photoContextList").appendToList(t),this},removePhoto:function(e,t){return this.getValue(e,"photoPageList").removeFromList(t.getValue("id")),this.getValue(e,"photoContextList").removeFromList(t.getValue("id")),this},hasPhoto:function(e,t){return this.getValue(e,"photoPageList").getFromListByID(t)||this.getValue(e,"photoContextList").getFromListByID(t)},attributes:{displayType:{readOnly:!0,defaultFn:function(){return"group"}},title:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:""},isModerator:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},isMember:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},isAdmin:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},pathAlias:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)||undefined},defaultFn:function(e){return e}},photoPageList:{isCollection:!0,pageFetch:{listFetcher:e.ListFetchers["flickr-groups-pools-getPhotos"]}},photoContextList:{isListProxy:!0,contextFetch:{listFetcher:e.ListFetchers["flickr-groups-pools-getContext"],listItemIdField:"photoId"}},url:{readOnly:!0,derivedBy:["pathAlias"],defaultFn:function(e){return"/groups/"+this.getValue(e,"pathAlias")+"/"}},urlSuffix:{readOnly:!0,derivedBy:["pathAlias"],defaultFn:function(e){return"pool-"+this.getValue(e,"pathAlias")}},bestIconURL:{},memberCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)},defaultFn:function(e){return 0}},poolCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)},defaultFn:function(e){return 0}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-groups-pools-getContext-fetcher","flickr-groups-pools-getPhotos-fetcher","flickr-groups-invite-photo-invite-creator","flickr-groups-pools-add-creator","flickr-groups-pools-remove-deletor","flickr-groups-invite-photo-cancel-deletor","attribute-helpers"]});
YUI.add("flickr-groups-pools-getGroups-fetcher",function(e){"use strict";function t(t,n){var r=t[0],i=t[1],s=t[2],o=r.groups,u=n.id,a={},f=[];if(o)return o.group&&e.Array.each(o.group,function(t,n){var r,i={id:t.id,title:t.name,isMember:t.member,isModerator:t.moderator,isAdmin:t.admin,memberCount:t.member_count,poolCount:t.pool_count,bestIconURL:e.APIHelper.response.parseGroupIconURLs(t.iconurls)};r=s.exists(t.id)?s.proxy(t.id):s.add(i),f.push(r)}),a={id:u,memberCount:r.userGroupMemberships?r.userGroupMemberships.member:null,moderatorCount:r.userGroupMemberships?r.userGroupMemberships.moderator:null,adminCount:r.userGroupMemberships?r.userGroupMemberships.admin:null,invitedCount:r.userGroupMemberships?r.userGroupMemberships.invited:null},a.groups=e.APIHelper.response.addOrReplaceListByPage({current:i.exists(u)?i.proxy(u).getValue("groups").getList():[],perPage:n.perPage,pageNum:n.page,totalItems:r.groups.total,newPages:f}),i.exists(u)?i.setValue(u,"groups",a.groups):i.add(a),a.groups}function n(t,n){var r=this;return e.batch(n.callAPI("flickr.groups.pools.getGroups",{extras:"icon_urls",page:t.page||0,per_page:t.perPage||400},!0),n.getModelRegistry("person-groups-models"),n.getModelRegistry("groups-pool-models")).then(function(e){return r._processResponse(e,t)},function(e){throw n.error(e.message),n.error(e.stack),n[e.fatal?"error":"debug"]("[flickr-groups-pools-getGroups-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-groups-pools-getGroups"]={run:n,_processResponse:t}},"@VERSION@",{requires:["flickr-promise"],optional:["person-groups-models","groups-pool-models","person-models"]});
YUI.add("person-groups-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ModelFetchers["flickr-people-getInfo"].run(t,this.appContext)}},attributes:{id:{},memberCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},moderatorCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},adminCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},invitedCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},groups:{isListProxy:!0,pageFetch:{listFetcher:e.ListFetchers["flickr-groups-pools-getGroups"]}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-groups-pools-getGroups-fetcher","flickr-people-getInfo-fetcher"]});
YUI.add("hermes-lang-models",function(e,t){e.Intl.add("hermes/models","en-US",{YOUR_PHOTOSTREAM:["Your photostream"],USER_PHOTOSTREAM:["${name}","'s photostream"],PHOTOSTREAM:["Photostream"],ZERO_PHOTOS:["0 photos"],ONE_PHOTO:["1 photo"],MULTIPLE_PHOTOS:["${photos}"," photos"],ONE_VIDEO:["1 video"],ONE_PHOTO_AND_ONE_VIDEO:["1 photo and 1 video"],MULTIPLE_PHOTOS_AND_ONE_VIDEO:["${photos}"," photos and 1 video"],MULTIPLE_VIDEOS:["${videos}"," videos"],ONE_PHOTO_AND_MULTIPLE_VIDEOS:["1 photo and ","${videos}"," videos"],MULTIPLE_PHOTOS_AND_MULTIPLE_VIDEOS:["${photos}"," photos and ","${videos}"," videos"]})},"@VERSION@",{requires:["intl"]});
YUI.add("flickr-photos-getContext-fetcher",function(e){"use strict";function t(t,n){var r={photo_id:t.photoId,num_prev:t.numNext,num_next:t.numPrev,view_as:t.viewAs,extras:e.APIHelper.request.getRebootPhotoExtras().concat(["can_download","can_share"])};return r}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u=[],a=[],f=s.proxy(n.photoId),l=f.getValue("owner"),c,h,p,d,v,m,g=[];return c=r.prevphotos,h=r.nextphotos,a=e.APIHelper.response.parsePhotos({photos:c.photo,existingPerson:l,photoModelRegistry:s,photoEngagementModelRegistry:o}),u=e.APIHelper.response.parsePhotos({photos:h.photo,existingPerson:l,photoModelRegistry:s,photoEngagementModelRegistry:o}),d=i.getValue(n.id,"photoContextList"),v=d.hasMinBoundary?d.hasMinBoundary():!1,m=d.hasMaxBoundary?d.hasMaxBoundary():!1,p=d.getList(),g=e.APIHelper.response.addOrReplaceListByContext({model:f,next:a,prev:u.reverse(),hasMin:v,hasMax:m,current:p,numNext:n.numNext,numPrev:n.numPrev}),i.setValue(n.id,"photoContextList",g),{next:a,previous:u.reverse()}}function r(t,n){var r=this;return e.batch(n.callAPI("flickr.photos.getContext",this._processParams(t,n),!0),n.getModelRegistry("photostream-models"),n.getModelRegistry("photo-models"),n.getModelRegistry("photo-engagement-models")).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-photos-getContext-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-photos-getContext"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photostream-models","photo-models","photo-engagement-models"]});
YUI.add("flickr-people-getPhotos-fetcher",function(e){"use strict";function t(t){var n={per_page:t.perPage||20,page:t.page||1,extras:e.APIHelper.request.getRebootPhotoExtras(),get_user_info:1};return t.id||t.userId?n.user_id=t.id||t.userId:t.pathAlias&&(n.path_alias=t.pathAlias),t.withPhotoId&&(n.jump_to=t.withPhotoId),n}function n(t){var n=t[0],r=t[1],i=t[2],s=t[3],o=t[4],u,a,f=n.user.nsid;return a={id:f,pathAlias:n.user.pathAlias,owner:e.APIHelper.response.parsePerson(n.user),totalItems:n.photos.total},i.exists(a.owner.id)||i.add(a.owner),a.owner=i.proxy(a.owner.id),u=e.APIHelper.response.parsePhotos({photos:n.photos.photo,ownerID:n.photos.owner,personModelRegistry:i,photoModelRegistry:r,photoEngagementModelRegistry:o}),a.photoPageList={perPage:n.photos.perpage,page:n.photos.page,pageContent:u,totalItems:n.photos.total},s.exists(a.id)?(s.setValue(a.id,"photoPageList",a.photoPageList),s.setValue(a.id,"totalItems",parseInt(n.photos.total,10)||0)):s.add(a),u}function r(t,n){var r=this;return e.batch(n.callAPI("flickr.people.getPhotos",this._processParams(t),!0),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models"),n.getModelRegistry("photostream-models"),n.getModelRegistry("photo-engagement-models")).then(function(e){return r._processResponse(e)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-people-getPhotos-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-people-getPhotos"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photo-models","person-models","photostream-models","photo-engagement-models"]});
YUI.add("photostream-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{langBundles:this.details.langBundles,name:this.name,remote:{read:function(t){return e.ListFetchers["flickr-people-getPhotos"].run(t,this.appContext)}},attributes:{displayType:{readOnly:!0,defaultFn:function(){return"photostream"}},title:{readOnly:!0,derivedBy:["owner"],defaultFn:function(e){var t=this.appContext.getViewer(),n;return t&&t.nsid===e?this.intlMessage({intlName:"models.YOUR_PHOTOSTREAM"}):(n=this.getValue(e,"owner"),n?this.intlMessage({intlName:"models.USER_PHOTOSTREAM",name:n.getValue("displayname")}):this.intlMessage({intlName:"models.PHOTOSTREAM"}))}},pathAlias:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)||undefined},defaultFn:function(e){return e}},owner:{isModel:!0},photoPageList:{isCollection:!0,pageFetch:{listFetcher:e.ListFetchers["flickr-people-getPhotos"]}},photoContextList:{isListProxy:!0,contextFetch:{listFetcher:e.ListFetchers["flickr-photos-getContext"],listItemIdField:"photoId"}},url:{readOnly:!0,derivedBy:["owner"],defaultFn:function(e){var t=this.getValue(e,"owner"),n=t?t.getValue("pathAlias"):e;return"/photos/"+n+"/"}},totalItems:{defaultFn:function(){return null}},urlSuffix:{readOnly:!0,defaultFn:function(e){return"photostream"}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-photos-getContext-fetcher","flickr-people-getPhotos-fetcher"],langBundles:["models"]});
YUI.add("flickr-people-getInfo-fetcher",function(e){"use strict";function t(e){var t={datecreate:1,extras:"icon_urls, safe_search"};if(e.id)t.user_id=e.id;else{if(!e.pathAlias)throw new Error("`fetch` is missing required params.");t.path_alias=e.pathAlias}return e.storage&&(t.storage=e.storage),t}function n(t){var n=t.apiResponse,r=t.personModelRegistry,i=t.personRelationshipModelRegistry,s=t.personProfileModelRegistry,o=t.personPreferencesModelRegistry,u=t.personGroupsModelRegistry,a=t.photostreamModelRegistry,f,l=n.person,c=l.id;r.exists(c)||r.add({id:c,pathAlias:l.pathAlias,username:l.username&&l.username._content,realname:l.realname&&l.realname._content,buddyicon:e.APIHelper.response.agnosticizeFarmPathTransferProtocol(l.iconurls),isAdFree:l.isAdFree,isPro:l.ispro,dateCreated:l.datecreate._content}),i.exists(c)||i.add({id:c,isContact:l.contact,isFriend:l.friend,isFamily:l.family,isIgnored:l.ignored,isIgnoredBy:l.ignoredby}),"safeSearch"in l&&(o.exists(c)||o.add({id:c,safeSearch:(l.safeSearch||1)-1})),s.exists(c)||(f={id:c,coverPhotoUrls:e.APIHelper.response.agnosticizeFarmPathTransferProtocol(l.coverphoto_url)},l.storage&&(f.storageUsed=l.storage.used.content,f.storageTotal=l.storage.total.content),l.unreadMessages&&(f.unreadMessages=l.unreadMessages.content),s.add(f)),u.exists(c)||u.add({id:c,memberCount:l.groupMemberships?l.groupMemberships.member:null,moderatorCount:l.groupMemberships?l.groupMemberships.moderator:null,adminCount:l.groupMemberships?l.groupMemberships.admin:null,invitedCount:l.groupMemberships?l.groupMemberships.invited:null}),a.exists(c)||a.add({id:c,pathAlias:l.pathAlias,owner:r.proxy(c),totalItems:l.photos.count&&l.photos.count.content})}function r(t,n){var r=this,i=n.getViewer();return i&&i.signedIn&&(t.id===i.nsid||t.nsid===i.nsid)&&(t.storage=1),(new e.FlickrPromise({apiResponse:n.callAPI("flickr.people.getInfo",this._processParams(t)),personModelRegistry:n.getModelRegistry("person-models"),personRelationshipModelRegistry:n.getModelRegistry("person-relationship-models"),personProfileModelRegistry:n.getModelRegistry("person-profile-models"),personPreferencesModelRegistry:n.getModelRegistry("person-preferences-models"),personGroupsModelRegistry:n.getModelRegistry("person-groups-models"),photostreamModelRegistry:n.getModelRegistry("photostream-models")})).then(r._processResponse,function(e){throw n[e.fatal?"error":"debug"]("[flickr-people-getInfo-fetcher] failed getting or processing API response:",e),e})}e.namespace("ModelFetchers")["flickr-people-getInfo"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","flickr-promise"],optional:["person-models","person-relationship-models","person-preferences-models","person-profile-models","person-groups-models","photostream-models","api-helper"]});
YUI.add("person-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ModelFetchers["flickr-people-getInfo"].run(t,this.appContext)}},attributes:{pathAlias:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)||undefined},defaultFn:function(e){return e}},username:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)}},realname:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)}},displayname:{readOnly:!0,derivedBy:["username","realname"],getter:function(e,t){return this.getValue(t,"realname")||this.getValue(t,"username")}},buddyicon:{},nsid:{readOnly:!0,defaultFn:function(e){return e}},isPro:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)}},isAdFree:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)}},isNoAds:{derivedBy:["isPro","isAdFree"],readOnly:!0,getter:function(e,t){var n=this.getValue(t,"isPro"),r=this.getValue(t,"isAdFree");return n||r}},dateCreated:{validator:function(t){return e.AttributeHelpers.validateDate(t)},setter:function(t){return e.AttributeHelpers.coerceDate(t)}},url:{readOnly:!0,derivedBy:["pathAlias"],defaultFn:function(e){var t=this.getValue(e,"pathAlias");return"/photos/"+t+"/"}},isMe:{readOnly:!0,defaultFn:function(e){var t=this.appContext.getViewer();return t.signedIn&&t.nsid===e}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-people-getInfo-fetcher","attribute-helpers"]});
YUI.add("flickr-photos-setDates-updater",function(e){"use strict";function t(t,n){var r={};return r.photo_id=t.photoId,r.date_posted=t.datePosted,r.date_taken=t.dateTaken,r.date_taken_granularity=t.takenGranularity,e.batch(n.callAPI("flickr.photos.setDates",r),n.getModelRegistry("photo-stats-models")).then(function(e){var r=e[0],i=e[1];if(!i.exists(t.photoId))throw new Error("[flickr-photos-setDates-updater] - Photo-stats model can not be updated if it does not exist");!r.photo||!r.photo.datePosted||!r.photo.dateTaken?n.warn("[flickr-photos-setDates-updater] - No updated data returned from API."):i.setValues(t.photoId,{datePosted:r.photo.datePosted.content,dateTaken:r.photo.dateTaken.content,takenGranularity:r.photo.dateTakenGranularity.content})},function(e){throw n[e.fatal?"error":"debug"]("[flickr-photos-setDates-updater] failed getting or processing API response:",e),e})}e.namespace("ModelUpdaters")["flickr-photos-setDates"]={run:t}},"@VERSION@",{requires:["flickr-promise"],optional:[]});
